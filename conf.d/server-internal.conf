# REST/API
server {
    listen 80;
    server_name ~^(?<chain_name>.+)-rest-io\.owallet\.dev$;

    proxy_hide_header 'Access-Control-Allow-Origin';
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

    location ~* ^/(.*) {
        if ($allowed_ip = 0) {
            return 403;
        }

        location ~* /validators/(.*)/delegations(.*) {
            deny all;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_pass http://lcd_${chain_name}_rr;
    }
}

# RPC
server {
    listen 80;
    server_name ~^(?<chain_name>.+)-rpc-io\.owallet\.dev$;

    proxy_hide_header 'Access-Control-Allow-Origin';
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

    location ~* ^/(.*) {
        if ($allowed_ip = 0) {
            return 403;
        }

        location ~* ^/(genesis|genesis_chunked|block_search|tx_search)(.*) {
            deny all;
            return 403;
        }

        location ~* ^/websocket {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;

            proxy_pass http://rpc_${chain_name}_rr;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;

        proxy_pass http://rpc_${chain_name}_rr;
    }
    location /_weight/ {
        root html;
        default_type 'text/html';
        content_by_lua_block {
            local template = require "resty.template"
            local fullnode_rr_up = package.loaded.fullnode_rr_up
            template.render("view.html", {
                heights = fullnode_rr_up.heights,
                nodes = fullnode_rr_up.nodes,
                max_height = fullnode_rr_up:get_max_height(),
                interval = package.loaded.delay,
                link = "https://scan.orai.io",
            })
        }
    }
    # location /_access_report/ {
    #     access_log off;
    #     alias /var/www/templates/;
    #     gzip_static on;
    #     expires max;
    #     add_header Cache-Control public;
    # }
    # location /_arws/ {
    #     proxy_pass http://localhost:7890;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $http_host;
    # }
    location = /favicon.ico {
        return 301 https://scan.orai.io/favicon.ico;
    }
}

# EVM - RPC
server {
    listen 80;
    server_name ~^(?<chain_name>.+)-evm-io\.owallet\.dev$;

    location / {
        if ($allowed_ip = 0) {
            return 403;
        }

        proxy_pass http://evm_rpc_${chain_name}_rr;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /websocket {
        if ($allowed_ip = 0) {
            return 403;
        }

        proxy_pass http://evm_ws_${chain_name}_rr;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
